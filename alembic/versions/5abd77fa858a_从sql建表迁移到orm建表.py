"""从sql建表迁移到ORM建表

Revision ID: 5abd77fa858a
Revises: 
Create Date: 2025-04-05 16:52:03.215862

"""
from typing import Sequence, Union

from alembic import op
import pgvector
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5abd77fa858a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'files', 'users', ['user_id'], ['id'])
    op.alter_column('knowledge_base_chunks', 'knowledge_base_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='关联的知识库ID',
               existing_nullable=False)
    op.alter_column('knowledge_base_chunks', 'file_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='原始文件ID',
               existing_nullable=False)
    op.alter_column('knowledge_base_chunks', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               comment=None,
               existing_comment='文本向量嵌入(2048维)',
               existing_nullable=True)
    op.drop_index('idx_chunks_uniq', table_name='knowledge_base_chunks')
    op.create_unique_constraint('idx_chunks_uniq', 'knowledge_base_chunks', ['knowledge_base_id', 'file_id', 'chunk_index'])
    op.drop_table_comment(
        'knowledge_base_chunks',
        existing_comment='知识库分块内容表',
        schema=None
    )
    op.alter_column('knowledge_bases', 'id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='知识库唯一标识',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('knowledge_bases', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='知识库名称',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('knowledge_bases', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('knowledge_bases', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               comment=None,
               existing_comment='状态: building/completed/failed',
               existing_server_default=sa.text("'building'::character varying"))
    op.alter_column('knowledge_bases', 'chunk_size',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='文档分块大小(字符数)',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'overlap_size',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='分块重叠大小(字符数)',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'hybrid_ratio',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False,
               comment=None,
               existing_comment='混合检索权重(0-1)',
               existing_server_default=sa.text('0.5'))
    op.drop_table_comment(
        'knowledge_bases',
        existing_comment='知识库元数据表',
        schema=None
    )
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='用户名(唯一)',
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='加密后的密码',
               existing_nullable=False)
    op.drop_table_comment(
        'users',
        existing_comment='系统用户表',
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'users',
        '系统用户表',
        existing_comment=None,
        schema=None
    )
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=100),
               comment='加密后的密码',
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment='用户名(唯一)',
               existing_nullable=False)
    op.create_table_comment(
        'knowledge_bases',
        '知识库元数据表',
        existing_comment=None,
        schema=None
    )
    op.alter_column('knowledge_bases', 'hybrid_ratio',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True,
               comment='混合检索权重(0-1)',
               existing_server_default=sa.text('0.5'))
    op.alter_column('knowledge_bases', 'overlap_size',
               existing_type=sa.INTEGER(),
               comment='分块重叠大小(字符数)',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'chunk_size',
               existing_type=sa.INTEGER(),
               comment='文档分块大小(字符数)',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               comment='状态: building/completed/failed',
               existing_server_default=sa.text("'building'::character varying"))
    op.alter_column('knowledge_bases', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('knowledge_bases', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('knowledge_bases', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='知识库名称',
               existing_nullable=False)
    op.alter_column('knowledge_bases', 'id',
               existing_type=sa.UUID(),
               comment='知识库唯一标识',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'knowledge_base_chunks',
        '知识库分块内容表',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint('idx_chunks_uniq', 'knowledge_base_chunks', type_='unique')
    op.create_index('idx_chunks_uniq', 'knowledge_base_chunks', ['knowledge_base_id', 'file_id', 'chunk_index'], unique=True)
    op.alter_column('knowledge_base_chunks', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               comment='文本向量嵌入(2048维)',
               existing_nullable=True)
    op.alter_column('knowledge_base_chunks', 'file_id',
               existing_type=sa.UUID(),
               comment='原始文件ID',
               existing_nullable=False)
    op.alter_column('knowledge_base_chunks', 'knowledge_base_id',
               existing_type=sa.UUID(),
               comment='关联的知识库ID',
               existing_nullable=False)
    op.drop_constraint(None, 'files', type_='foreignkey')
    # ### end Alembic commands ###
